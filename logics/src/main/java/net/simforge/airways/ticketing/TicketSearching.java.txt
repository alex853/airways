/*
 * Airways Project (c) Alexey Kornev, 2015-2019
 */

package net.simforge.airways.ticketing;

import net.simforge.legacy.airways.model.Flight;
import net.simforge.legacy.airways.model.PassengerGroup;
import net.simforge.legacy.airways.routing.Journey;
import net.simforge.legacy.airways.routing.Routing;

import java.util.List;
import java.sql.Connection;
import java.sql.SQLException;

public class TicketSearching {
    public static List<Flight> search(Connection connx, PassengerGroup group) throws SQLException {
        int fromCityId = group.getPositionCityId();
        int toCityId = !group.isPositionRoundtrip() ? group.getToCityId() : group.getFromCityId();

        Routing routing = new Routing(connx, RefDataCache.getCity(fromCityId), RefDataCache.getCity(toCityId), group.getSize());
        routing.proceed();
        List<Journey> journeys = routing.getJourneys();
        if (journeys.isEmpty()) {
            return null;
        } else {
            return journeys.get(0).getFlights();
        }
    }
}
